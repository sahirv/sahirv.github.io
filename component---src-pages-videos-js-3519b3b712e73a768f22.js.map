{"version":3,"sources":["webpack:///./src/pages/videos.js","webpack:///./src/pages/videos.module.css","webpack:///./src/components/map/continents.module.css","webpack:///./src/components/map/thumbtack.js","webpack:///./src/components/map/continents.js","webpack:///./src/components/map/map.js"],"names":["SecondPage","data","useStaticQuery","image_data","nodes","earth_image_details","map_data","React","useState","undefined","useRef","pageTitle","title","className","styles","childrenContainer","videoContainer","width","height","src","frameborder","allow","allowfullscreen","module","exports","Thumbtack","props","pinRef","useEffect","matrix","current","icon","children","pinhead","pin","rx","baseVal","value","ry","a","cx","cy","style","strokeWidth","x","y","ref","version","position","top","left","onClick","e","stopPropagation","clickCallback","imageDetails","image","thumbtack","transform","fill","fillOpacity","fillRule","id","Continents","draw_continent","entry","path_html","push","d","continent_elements","continents","mapRef","c","continent","path","pins","i","selectImageCallback","numberOfItems","getItem","setMatrix","appendItem","createSVGTransformFromMatrix","clickedContinent","setClickedContinent","onContinentClick","viewBox","transformOrigin","selected","Map","matrixRef","val","setScale","func","event","preventDefault","map","currentTarget","worldMapContainer","worldMap","zoom","deltaY","scale_factor","pageX","offsetLeft","pageY","offsetTop","totalZoom","tx","ty","f","transformedWidth","scrollWidth","transformedHeight","scrollHeight","mat","createSVGMatrix","translate","scale","multiply","addEventListener","removeEventListener"],"mappings":"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","file":"component---src-pages-videos-js-3519b3b712e73a768f22.js","sourcesContent":["import React, { useRef } from \"react\"\nimport styles from \"./videos.module.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PhotoGrid from \"../components/photogrid/grid\"\n\nimport Map from \"../components/map/map\"\n\nconst SecondPage = () => {\n  const data = useStaticQuery(graphql`\n  {\n    thumbnails: allFile(filter: {sourceInstanceName: {eq: \"earth\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 500, quality: 80, cropFocus: CENTER) {\n              originalName\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    images: allFile(filter: {sourceInstanceName: {eq: \"earth\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 2000, quality: 72) {\n              originalName\n              ...GatsbyImageSharpFluid\n              src\n            }\n          }\n        }\n      }\n    }\n    image_data: allEarthJson {\n      nodes {\n        earth_image_details {\n          continent\n          description\n          image\n          title\n          location\n          x\n          y\n          tags\n        }\n      }\n    }\n    map_data: allMapJson {\n      nodes {\n        map_data {\n          continent\n          path\n        }\n      }\n    }\n    \n  }\n  `);\n  let imageDetails = data.image_data.nodes[0].earth_image_details;\n  let continents = data.map_data.nodes[0].map_data;\n\n  const [currentContinent, setCurrentContinent] = React.useState(\"none\");\n  const [filterOpen, setFilterOpen] = React.useState(false);\n  const [currentPictureFromPin, setCurrentPictureFromPin] = React.useState(undefined);\n  let [currentSection, setCurrentSection] = React.useState(\"all\");\n\n  const gridRef = useRef();\n\n  let selectImageCallback = (i) => {\n    setCurrentPictureFromPin(i);\n    console.log(i);\n  }\n\n  let continentClickCallback = (c) => {\n    setCurrentContinent(c);\n    // scrollToGrid(gridRef);\n    setFilterOpen(!filterOpen);\n  }\n  \n  return(\n  <Layout pageTitle=\"Earth\">\n    <SEO title=\"Earth - Travel\" />\n    <div className={styles.childrenContainer}>\n\n      <div className={styles.videoContainer}>\n        <h4>Olympic National Park - Summer 2021</h4>\n        <iframe width=\"700\" height=\"394\" src=\"https://www.youtube.com/embed/ltZlmji4frI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n      </div>\n    </div>\n  </Layout>\n  );\n}\nexport default SecondPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"childrenContainer\":\"videos-module--childrenContainer--a0NdN\",\"videoContainer\":\"videos-module--videoContainer--2qHrW\",\"continentLabel\":\"videos-module--continentLabel--18z_C\",\"filterInstructions\":\"videos-module--filterInstructions--h3rlz\",\"earthDescription\":\"videos-module--earthDescription--2e27f\",\"continentFilterButton\":\"videos-module--continentFilterButton--2XseT\",\"travelNav\":\"videos-module--travelNav--2H7ai\",\"travelNavButton\":\"videos-module--travelNavButton--1JnqP\",\"continentContainer\":\"videos-module--continentContainer--190lp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"continents-module--selected--3aAvp\",\"map\":\"continents-module--map--2Iyuh\",\"thumbtack\":\"continents-module--thumbtack--3lYb2\",\"pinhead\":\"continents-module--pinhead--m4pHG\"};","import React, { useState, createRef, useRef, useEffect } from \"react\"\nimport styles from \"./continents.module.css\"\n\nconst Thumbtack = props => {\n\n    let pinRef = useRef(null);\n\n    useEffect(() => {\n        if (props.matrix && pinRef.current){\n            let icon = pinRef.current.children[0].children[0];\n            let pinhead = icon.children[1];\n            let pin = icon.children[0];\n \n            pinhead.rx.baseVal.value = pinhead.ry.baseVal.value = 20 / props.matrix.a;\n            pinhead.cx.baseVal.value =  34 + 3 - (3 / props.matrix.a);\n            pinhead.cy.baseVal.value = 40 + 50 - (50 / props.matrix.a);\n            pinhead.style.strokeWidth = 3 / props.matrix.a;\n\n            pin.width.baseVal.value = 2 / props.matrix.a;\n            pin.height.baseVal.value = 50 / props.matrix.a;\n            pin.x.baseVal.value = 34 + 3 - 1.5*(3 / props.matrix.a);\n            pin.y.baseVal.value = 40 + 50 - (50 / props.matrix.a);\n        }\n    });\n\n    return(\n        <svg ref={pinRef}>\n            <svg\n                version={\"1.1\"}\n                style={{position: \"absolute\",top: 0, left: 0, height: \"85px\", width: \"60px\"}}\n                onClick={(e) => {\n                    e.stopPropagation();\n                    props.clickCallback(props.imageDetails.image)}}>\n                <g\n                    className={styles.thumbtack}\n                    style={{transform: \"translate(\" + props.imageDetails.x + \"px, \" + props.imageDetails.y + \"px) scale(0.2)\"}}>\n                    <rect\n                    style={{fill:\"#9b9b9b\",fillOpacity:1,fillRule:\"evenodd\"}}\n                    id={\"rect3348\"}\n                    width={\"3\"}\n                    height={\"50\"}\n                    x={\"34\"}\n                    y={\"40\"} />\n                    <ellipse\n                    className={styles.pinhead}\n                    id={\"path3338\"}\n                    cx={\"36\"}\n                    cy={\"40\"}\n                    rx={\"20\"}\n                    ry={\"20\"} />\n                </g>\n            </svg>\n        </svg>\n    )\n}\n\nexport default Thumbtack","import React, { useState, createRef, useRef, useEffect } from \"react\"\nimport styles from \"./continents.module.css\"\nimport Thumbtack from \"./thumbtack.js\"\n\nconst Continents = props => {\n    let draw_continent = (entry) => {\n        let path_html = [];\n        for (let e in entry){\n            path_html.push(\n                <path d={entry[e]} />\n            );\n        }\n        return path_html;\n    }\n    let continent_elements = {};\n    let continents = props.continents;\n\n    let mapRef = useRef(null);\n\n    for (let c in continents) {\n        continent_elements[continents[c].continent] = draw_continent(continents[c].path)\n    }\n\n    let matrix = props.matrix;  \n\n    // generate pins\n    let pins = [];\n    for (var i in props.imageDetails){\n        let image = props.imageDetails[i];\n        pins.push(<Thumbtack matrix={props.matrix} imageDetails={image} clickCallback={props.selectImageCallback}/>);\n    }\n\n    useEffect(() => {\n        if (matrix && mapRef.current){\n            if (mapRef.current.transform.baseVal.numberOfItems){\n                mapRef.current.transform.baseVal.getItem(0).setMatrix(matrix);\n            } else {\n                mapRef.current.transform.baseVal.appendItem(mapRef.current.createSVGTransformFromMatrix(matrix));\n            }\n        }\n    });\n\n    const [clickedContinent, setClickedContinent] = useState(undefined);\n\n    return(\n        <div id=\"worldMapContainer\">\n            <svg\n                onClick={() => {props.onContinentClick(undefined); setClickedContinent(undefined);}}\n                version=\"1.0\"\n                width=\"100%\"\n                viewBox=\"40 0 385 205\"\n                id=\"worldMap\"\n                ref={mapRef}\n                style={{transformOrigin: \"0 0\"}}>\n                \n                {/*Africa */}\n                <g\n                onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"africa\"); setClickedContinent(\"africa\");}}\n                id=\"africa\"\n                transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n                className={clickedContinent == \"africa\" ? styles.selected : null }>\n                {continent_elements[\"africa\"]}\n                </g>\n                {/*Asia*/}\n                <g\n                onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"asia\"); setClickedContinent(\"asia\");}}\n                id=\"asia\"\n                transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n                className={clickedContinent == \"asia\" ? styles.selected : null }>\n                {continent_elements[\"asia\"]}\n                </g>\n                {/*Australia*/}\n                <g\n                onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"australia\"); setClickedContinent(\"australia\");}}\n                id=\"australia\"\n                transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n                className={clickedContinent == \"australia\" ? styles.selected : null }>\n                {continent_elements[\"australia\"]}\n                </g>\n                {/*Europe*/}\n                <g\n                onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"europe\"); setClickedContinent(\"europe\");}}\n                id=\"europe\"\n                transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n                className={clickedContinent == \"europe\" ? styles.selected : null }>\n                {continent_elements[\"europe\"]}\n                </g>\n                {/*South America*/}\n                <g\n                onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"south america\"); setClickedContinent(\"south america\");}}\n                id=\"south_america\"\n                transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n                className={clickedContinent == \"south america\" ? styles.selected : null }>\n                {continent_elements[\"south america\"]}\n                </g>\n                {/*North America*/}\n                <g\n                onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"north america\"); setClickedContinent(\"north america\");}}\n                id=\"north_america\"\n                transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n                className={clickedContinent == \"north america\" ? styles.selected : null }>\n                {continent_elements[\"north america\"]}\n                </g>\n                {pins}\n            </svg>\n            \n        </div>\n    )\n}\n\nexport default Continents","import React, { useRef, useEffect, useState } from \"react\"\nimport Continents from \"./continents.js\"\nimport styles from \"./continents.module.css\"\n\nconst Map = props => {\n    let ref = useRef(null);\n    let matrixRef = useRef();\n    let [scale, setScale] = useState({val: 0, x: 0, y: 0});\n\n    let func = (event) => {\n            event.preventDefault();\n            let map = event.currentTarget.children.worldMapContainer.children.worldMap;\n            let zoom = event.deltaY > 0 ? -1 : 1;\n            let scale_factor = 1 + 0.05 * zoom;\n            let x = event.pageX - event.currentTarget.offsetLeft;\n            let y = event.pageY - event.currentTarget.offsetTop;\n            let transform = map.transform.baseVal[0];\n\n            if (transform != undefined){\n                let totalZoom = transform.matrix.a;\n\n                if (zoom < 1 && totalZoom <= 1) {\n                    return;\n                }\n\n                let tx = transform.matrix.e;\n                let ty = transform.matrix.f;\n                \n                let transformedWidth = map.scrollWidth * totalZoom;\n                let transformedHeight = map.scrollHeight * totalZoom;\n\n                // Configure zoom out, latch to one corner once it is visible\n                if (zoom < 1) {\n                    if (tx >= 0) {\n                        x = 0;\n                    }\n                    if (transformedWidth + tx - map.scrollWidth <= 0) {\n                        x = map.scrollWidth;\n                    }\n                    if (ty >= 0) {\n                        y = 0;\n                    }\n                    if (transformedHeight + ty - map.scrollHeight <= 0) {\n                        y = map.scrollHeight;\n                    }\n                }\n            }\n            let mat = map.createSVGMatrix()\n                .translate(x, y)\n                .scale(scale_factor, scale_factor)\n                .translate(-x, -y);\n            if (matrixRef.current){\n                mat = mat.multiply(matrixRef.current);\n            }\n            matrixRef.current = mat;\n\n            //trigger render\n            setScale(matrixRef.current);\n    }\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.addEventListener(\"wheel\", func);\n            return function () {\n                ref.current.removeEventListener(\"wheel\", func);\n              }\n        }\n    }, [ref]);\n\n    return (\n        <div ref={ref} className={styles.map} id=\"mapcontainer\">\n            <Continents continents={props.continents} \n                        onContinentClick={props.onContinentClick} \n                        matrix={matrixRef.current} \n                        imageDetails={props.imageDetails}\n                        selectImageCallback={props.selectImageCallback}/>\n        </div>\n    );\n}\n\nexport default Map"],"sourceRoot":""}