{"version":3,"file":"component---src-pages-photography-js-a5f539a54225b94da714.js","mappings":"gMASWA,EAAW,iCAEXC,EAAkB,wC,wCC+G7B,MA/GmB,IAAiB,IAAhB,SAACC,GAAS,EAC5B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAuD5B,IAAIC,EAAeF,EAAKG,WAAWC,MAAM,GAAGC,oBAGxCC,GAFaN,EAAKO,SAASH,MAAM,GAAGG,SAExB,IAAIC,gBAAgBT,EAASU,SAC9BH,GAAYA,EAAUI,IAAI,SAEzC,MAAOC,EAAkBC,GAAuBC,EAAAA,SAAe,SACxDC,EAAYC,GAAiBF,EAAAA,UAAe,IAC5CG,EAAuBC,GAA4BJ,EAAAA,cAAeK,GACzE,IAAKC,EAAgBC,GAAqBP,EAAAA,SAAe,OAEzD,MAAMQ,GAAUC,EAAAA,EAAAA,UAahB,OACA,gBAAC,IAAM,CAACC,UAAU,SAChB,gBAAC,IAAG,CAACC,MAAM,mBACX,uBAAKC,UDpFc,mCCqFf,uBAAKA,UAA6B,aAAlBN,EAAgCO,EAAyB,IAAMA,EAAkBA,EAAwBC,QAAS,IAAMP,EAAkB,cAAc,aACxK,uBAAKK,UAA6B,YAAlBN,EAA+BO,EAAyB,IAAMA,EAAkBA,EAAwBC,QAAS,IAAMP,EAAkB,aAAa,YACtK,uBAAKK,UAA6B,YAAlBN,EAA+BO,EAAyB,IAAMA,EAAkBA,EAAwBC,QAAS,IAAMP,EAAkB,aAAa,aACtK,uBAAKK,UAA6B,OAAlBN,EAA0BO,EAAyB,IAAMA,EAAkBA,EAAyBC,QAAS,IAAMP,EAAkB,QAAQ,eAGjK,uBAAKK,UDpGsB,2CC4GzB,gBAAC,IAAS,CACR1B,SAAUA,EACVsB,QAASA,EACTO,UAA6B,OAAlBT,OAA0BD,EAAYP,EACjDkB,WAAY7B,EAAK6B,WAAWC,MAC5BC,OAAQ/B,EAAK+B,OAAOD,MACpB5B,aAAcA,EACd8B,eAAgBhB,EAChBiB,cAAed,KAEZ,C","sources":["webpack://gatsby-starter-default/./src/pages/travel.module.css","webpack://gatsby-starter-default/./src/pages/photography.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var childrenContainer = \"travel-module--childrenContainer--eb255\";\nexport var continentContainer = \"travel-module--continentContainer--ed43a\";\nexport var continentFilterButton = \"travel-module--continentFilterButton--ce246\";\nexport var continentLabel = \"travel-module--continentLabel--e4f5a\";\nexport var earthDescription = \"travel-module--earthDescription--c1a3a\";\nexport var filterInstructions = \"travel-module--filterInstructions--fd51e\";\nexport var filterOpen = \"travel-module--filterOpen--2e090\";\nexport var hrStyle = \"travel-module--hrStyle--d047b\";\nexport var selected = \"travel-module--selected--8960b\";\nexport var travelNav = \"travel-module--travelNav--a8ee9\";\nexport var travelNavButton = \"travel-module--travelNavButton--03bcd\";","import React, { useRef } from \"react\"\r\nimport * as styles from \"./travel.module.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport PhotoGrid from \"../components/photogrid/grid\"\r\n\r\n// import Map from \"../components/map/map\"\r\n\r\nconst SecondPage = ({location}) => {\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    thumbnails: allFile(filter: {sourceInstanceName: {eq: \"earth\"}}) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            parent {\r\n              ... on File {\r\n                relativePath\r\n              }\r\n            }\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500, quality: 80, transformOptions: {fit: COVER, cropFocus: CENTER}, aspectRatio: 0.9, placeholder: BLURRED)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    images: allFile(filter: {sourceInstanceName: {eq: \"earth\"}}) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            parent {\r\n              ... on File {\r\n                relativePath\r\n              }\r\n            }\r\n            gatsbyImageData(layout: CONSTRAINED, width: 3000, quality: 72, placeholder: BLURRED)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    image_data: allEarthJson {\r\n      nodes {\r\n        earth_image_details {\r\n          continent\r\n          description\r\n          image\r\n          title\r\n          location\r\n          x\r\n          y\r\n          tags\r\n        }\r\n      }\r\n    }\r\n    map_data: allMapJson {\r\n      nodes {\r\n        map_data {\r\n          continent\r\n          path\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n  `);\r\n  let imageDetails = data.image_data.nodes[0].earth_image_details;\r\n  let continents = data.map_data.nodes[0].map_data;\r\n\r\n  let urlParams = new URLSearchParams(location.search);\r\n  let urlImage = urlParams ? urlParams.get('image') : undefined;\r\n\r\n  const [currentContinent, setCurrentContinent] = React.useState(\"none\");\r\n  const [filterOpen, setFilterOpen] = React.useState(false);\r\n  const [currentPictureFromPin, setCurrentPictureFromPin] = React.useState(undefined);\r\n  let [currentSection, setCurrentSection] = React.useState(\"all\");\r\n\r\n  const gridRef = useRef();\r\n\r\n  let selectImageCallback = (i) => {\r\n    setCurrentPictureFromPin(i);\r\n    console.log(i);\r\n  }\r\n\r\n  let continentClickCallback = (c) => {\r\n    setCurrentContinent(c);\r\n    // scrollToGrid(gridRef);\r\n    setFilterOpen(!filterOpen);\r\n  }\r\n  \r\n  return(\r\n  <Layout pageTitle=\"Earth\">\r\n    <SEO title=\"Earth - Travel\" />\r\n    <div className={styles.travelNav}>\r\n        <div className={currentSection == \"landscape\" ? styles.travelNavButton + \" \" + styles.selected : styles.travelNavButton} onClick={() => setCurrentSection(\"landscape\")}>Landscape</div>\r\n        <div className={currentSection == \"wildlife\" ? styles.travelNavButton + \" \" + styles.selected : styles.travelNavButton} onClick={() => setCurrentSection(\"wildlife\")}>Wildlife</div>\r\n        <div className={currentSection == \"portrait\" ? styles.travelNavButton + \" \" + styles.selected : styles.travelNavButton} onClick={() => setCurrentSection(\"portrait\")}>Portraits</div>\r\n        <div className={currentSection == \"all\" ? styles.travelNavButton + \" \" + styles.selected : styles.travelNavButton}  onClick={() => setCurrentSection(\"all\")}>All Photos</div>\r\n        {/* <div className={currentSection == \"map\" ? styles.travelNavButton + \" \" + styles.selected : styles.travelNavButton} onClick={() => setCurrentSection(\"map\")}>Map </div> */}\r\n    </div>\r\n    <div className={styles.childrenContainer}>\r\n    {/* { currentSection == \"map\" ?\r\n      <div>\r\n        <div className={styles.earthDescription}>This page is for me as much as it is for you. Here I present to you the pictures I've taken of everything that we can find on our own wonderful planet. I'm not a photographer by any means, but I'm trying to learn. Some of the pictures here are taken with smartphone cameras, and others with a DSLR. The map is there for me to document where I've been; ultimately the goal is to cover the whole thing with pins. Feel free to zoom in and click on a pin to see what I took a picture of at that spot on Earth. If you just want to see photos, check out the Wildlife and Photos tabs.</div>\r\n        <div className={styles.continentContainer}>\r\n          <Map continents={continents} onContinentClick={continentClickCallback} imageDetails={imageDetails} selectImageCallback={selectImageCallback}/>\r\n        </div>\r\n      </div> : <></> } */}\r\n      <PhotoGrid\r\n        location={location}\r\n        gridRef={gridRef}\r\n        continent={currentSection == \"all\" ? undefined : currentContinent} \r\n        thumbnails={data.thumbnails.edges} \r\n        images={data.images.edges} \r\n        imageDetails={imageDetails}\r\n        pictureFromPin={currentPictureFromPin}\r\n        imageCategory={currentSection}></PhotoGrid>\r\n    </div>\r\n  </Layout>\r\n  );\r\n}\r\nexport default SecondPage\r\n"],"names":["selected","travelNavButton","location","data","useStaticQuery","imageDetails","image_data","nodes","earth_image_details","urlParams","map_data","URLSearchParams","search","get","currentContinent","setCurrentContinent","React","filterOpen","setFilterOpen","currentPictureFromPin","setCurrentPictureFromPin","undefined","currentSection","setCurrentSection","gridRef","useRef","pageTitle","title","className","styles","onClick","continent","thumbnails","edges","images","pictureFromPin","imageCategory"],"sourceRoot":""}