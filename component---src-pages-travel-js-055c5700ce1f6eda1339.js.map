{"version":3,"sources":["webpack:///./src/map/continents.module.css","webpack:///./src/map/continents.js","webpack:///./src/map/map.js","webpack:///./src/pages/travel.js","webpack:///./src/pages/travel.module.css"],"names":["module","exports","Continents","props","draw_continent","entry","path_html","e","push","d","continent_elements","continents","c","continent","path","useState","undefined","clickedContinent","setClickedContinent","onClick","onContinentClick","version","width","viewBox","preserveAspectRatio","id","className","styles","mapSVG","stopPropagation","transform","selected","Map","SecondPage","data","useStaticQuery","imageDetails","image_data","nodes","earth_image_details","map_data","React","currentContinent","setCurrentContinent","filterOpen","setFilterOpen","gridRef","useRef","pageTitle","title","earthDescription","hrStyle","continentLabel","continentFilterButton","class","continentFilterContainer","filterInstructions","thumbnails","edges","images"],"mappings":"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","file":"component---src-pages-travel-js-055c5700ce1f6eda1339.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"continents-module--selected--1RLmy\"};","import React, { useState } from \"react\"\nimport styles from \"./continents.module.css\"\n\nconst Continents = props => {\n   let draw_continent = (entry) => {\n      let path_html = [];\n      for (let e in entry){\n         path_html.push(\n            <path d={entry[e]} />\n         );\n      }\n      return path_html;\n   }\n\n   let continent_elements = {};\n   let continents = props.continents;\n   for (let c in continents) {\n      continent_elements[continents[c].continent] = draw_continent(continents[c].path)\n   }\n\n   const [clickedContinent, setClickedContinent] = useState(undefined);\n\n   return(\n<svg\n   onClick={() => {props.onContinentClick(undefined); setClickedContinent(undefined);}}\n   version=\"1.0\"\n   width=\"100%\"\n   viewBox=\"0 0 468 200\"\n   preserveAspectRatio=\"xMidYMid meet\"\n   id=\"worldMap\"\n   className={styles.mapSVG}>\n  {/*Africa */}\n  <g\n     onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"africa\"); setClickedContinent(\"africa\");}}\n     id=\"africa\"\n     transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n     className={clickedContinent == \"africa\" ? styles.selected : null }>\n     {continent_elements[\"africa\"]}\n  </g>\n  {/*Asia*/}\n  <g\n     onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"asia\"); setClickedContinent(\"asia\");}}\n     id=\"asia\"\n     transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n     className={clickedContinent == \"asia\" ? styles.selected : null }>\n    {continent_elements[\"asia\"]}\n  </g>\n  {/*Australia*/}\n  <g\n     onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"australia\"); setClickedContinent(\"australia\");}}\n     id=\"australia\"\n     transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n     className={clickedContinent == \"australia\" ? styles.selected : null }>\n    {continent_elements[\"australia\"]}\n  </g>\n  {/*Europe*/}\n  <g\n     onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"europe\"); setClickedContinent(\"europe\");}}\n     id=\"europe\"\n     transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n     className={clickedContinent == \"europe\" ? styles.selected : null }>\n    {continent_elements[\"europe\"]}\n  </g>\n  {/*South America*/}\n  <g\n     onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"south america\"); setClickedContinent(\"south america\");}}\n     id=\"south_america\"\n     transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n     className={clickedContinent == \"south america\" ? styles.selected : null }>\n    {continent_elements[\"south america\"]}\n  </g>\n  {/*North America*/}\n  <g\n     onClick={(e) => {e.stopPropagation(); props.onContinentClick(\"north america\"); setClickedContinent(\"north america\");}}\n     id=\"north_america\"\n     transform=\"matrix(1.6963e-2,0,0,-1.6963e-2,0,239)\"\n     className={clickedContinent == \"north america\" ? styles.selected : null }>\n    {continent_elements[\"north america\"]}\n  </g>\n</svg>\n)\n}\n\nexport default Continents","import React from \"react\"\nimport Continents from \"./continents.js\"\n\nconst Map = props => {\n    return (\n        <div>\n            <Continents continents={props.continents} onContinentClick={props.onContinentClick}/>\n        </div>\n    );\n}\n\nexport default Map","import React, { useRef } from \"react\"\nimport styles from \"./travel.module.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PhotoGrid from \"../components/photogrid/grid\"\n\nimport Map from \"../map/map\"\n\nconst SecondPage = () => {\n  const data = useStaticQuery(graphql`\n  {\n    thumbnails: allFile(filter: {sourceInstanceName: {eq: \"earth\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 500, quality: 80, cropFocus: CENTER) {\n              originalName\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    images: allFile(filter: {sourceInstanceName: {eq: \"earth\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 2000, quality: 72) {\n              originalName\n              ...GatsbyImageSharpFluid\n              src\n            }\n          }\n        }\n      }\n    }\n    image_data: allEarthJson {\n      nodes {\n        earth_image_details {\n          continent\n          description\n          image\n          title\n          location\n        }\n      }\n    }\n    map_data: allMapJson {\n      nodes {\n        map_data {\n          continent\n          path\n        }\n      }\n    }\n    \n  }\n  `);\n  let imageDetails = data.image_data.nodes[0].earth_image_details;\n  let continents = data.map_data.nodes[0].map_data;\n\n  const [currentContinent, setCurrentContinent] = React.useState(undefined);\n  const [filterOpen, setFilterOpen] = React.useState(false);\n\n  const gridRef = useRef();\n\n  const scrollToGrid = (ref) => {\n    console.log(ref);\n    if (ref.current) { window.scrollTo(0, ref.current.offsetTop); }\n  }\n\n  let continentClickCallback = (c) => {\n    setCurrentContinent(c);\n    // scrollToGrid(gridRef);\n    setFilterOpen(!filterOpen);\n  }\n\n  let toggleFilter = () => {\n    setFilterOpen(!filterOpen);\n  }\n\n  return(\n  <Layout pageTitle=\"Earth\">\n    <SEO title=\"Earth - Travel\" />\n    <div className={styles.earthDescription}>What should we do with our time but to explore? I haven't seen much of the world, but the parts I have seen offered plenty of beautiful scenes and moments.</div>\n    <hr className={styles.hrStyle}></hr>\n    <div >\n      <h4 className={styles.continentLabel}>Showing {currentContinent ? currentContinent : \"All Continents\"}</h4>\n      <div className={styles.continentFilterButton} onClick={() => toggleFilter()}>\n          <i class=\"fa fa-filter\"></i>\n      </div>\n      <div className={filterOpen ? styles.continentFilterContainer + \" \" + styles.filterOpen : styles.continentFilterContainer}>\n        <p className={styles.filterInstructions}>Click on the continents to filter.</p>\n        <Map continents={continents} onContinentClick={continentClickCallback}/>\n      </div>\n    </div>\n    <PhotoGrid\n      gridRef={gridRef}\n      continent={currentContinent} \n      thumbnails={data.thumbnails.edges} \n      images={data.images.edges} \n      imageDetails={imageDetails}></PhotoGrid>\n  </Layout>\n);\n  }\n\nexport default SecondPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"earthDescription\":\"travel-module--earthDescription--3JG8r\",\"hrStyle\":\"travel-module--hrStyle--1jtnH\",\"continentFilterContainer\":\"travel-module--continentFilterContainer--3TuK8\",\"continentFilterButton\":\"travel-module--continentFilterButton--3hCZ6\",\"filterOpen\":\"travel-module--filterOpen--wYYdU\",\"filterInstructions\":\"travel-module--filterInstructions--2Tk7v\",\"continentLabel\":\"travel-module--continentLabel--f6ezg\"};"],"sourceRoot":""}