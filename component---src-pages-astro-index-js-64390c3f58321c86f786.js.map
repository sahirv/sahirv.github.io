{"version":3,"sources":["webpack:///./src/pages/astro/astrolayout.js","webpack:///./src/pages/astro/index.js","webpack:///./src/pages/astro/astro.module.css"],"names":["AstroLayout","children","section","pageTitle","className","styles","astroNav","astroNavButton","selected","to","title","childrenContainer","SecondPage","data","useStaticQuery","imageDetails","image_data","nodes","astro_image_details","sort","a","b","id","useQueryParam","StringParam","urlImage","thumbnails","edges","images","module","exports"],"mappings":"+FAAA,yFA4BeA,UAtBK,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAC5B,OACI,kBAAC,IAAD,CAAQC,UAAU,SACd,yBAAKC,UAAWC,IAAOC,UACnB,yBAAKF,UAAsB,UAAXF,EAAsBG,IAAOE,eAAiB,IAAMF,IAAOG,SAAWH,IAAOE,gBACzF,kBAAC,OAAD,CAAME,GAAI,WAAV,aASR,kBAAC,IAAD,CAAKC,MAAM,qBACX,yBAAKN,UAAWC,IAAOM,mBACnB,8BAAOV,O,oCCtBvB,sGAsEeW,UA9DI,WACjB,IAAMC,EAAOC,yBAAe,cAgDxBC,EAAeF,EAAKG,WAAWC,MAAM,GAAGC,oBAE5CH,EAAaI,MAAK,SAACC,EAAEC,GAAO,OAAOA,EAAEC,GAAKF,EAAEE,MAnDrB,MAqDSC,YAAc,QAASC,KAAhDC,EArDgB,UAuDvB,OACE,kBAAC,UAAD,CAAavB,QAAQ,UACjB,kBAAC,IAAD,CAAWwB,WAAYb,EAAKa,WAAWC,MAAOC,OAAQf,EAAKe,OAAOD,MAAOZ,aAAcA,EAAcU,SAAUA,O,qBChEvHI,EAAOC,QAAU,CAAC,kBAAoB,yCAAyC,SAAW,gCAAgC,eAAiB,sCAAsC,SAAW,gCAAgC,iBAAmB","file":"component---src-pages-astro-index-js-64390c3f58321c86f786.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport styles from \"./astro.module.css\"\nimport { Link } from \"gatsby\"\n\nconst AstroLayout = ({children, section}) => {\n    return (\n        <Layout pageTitle=\"Space\">\n            <div className={styles.astroNav}>\n                <div className={section == \"images\" ? styles.astroNavButton + \" \" + styles.selected : styles.astroNavButton}>\n                    <Link to={\"/astro/\"}>Gallery</Link>\n                </div>\n                {/* <div className={section == \"equipment\" ? styles.astroNavButton + \" \" + styles.selected : styles.astroNavButton}>\n                    <Link to={\"/astro/equipment\"}>Equipment</Link>\n                </div>\n                <div className={section == \"blog\" ? styles.astroNavButton + \" \" + styles.selected : styles.astroNavButton}>\n                    <Link to={\"/astro/blog\"}>Blog</Link>\n                </div> */}\n            </div>\n            <SEO title=\"Astrophotography\" />\n            <div className={styles.childrenContainer}>\n                <main>{children}</main>\n            </div>\n        </Layout>\n    );\n}\n\nexport default AstroLayout\n","import React, { useState } from \"react\"\nimport Img from \"gatsby-image\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PhotoGrid from \"../../components/photogrid/grid\"\nimport AstroLayout from \"./astrolayout\"\nimport { useQueryParam, StringParam } from \"use-query-params\";\nimport styles from \"./astro.module.css\"\n\nconst SecondPage = () => {\n  const data = useStaticQuery(graphql`\n  {\n    thumbnails: allFile(filter: {sourceInstanceName: {eq: \"astro\"}}, sort: {fields: name, order: ASC}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 500, quality: 80, cropFocus: CENTER) {\n              originalName\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    images: allFile(filter: {sourceInstanceName: {eq: \"astro\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth: 2000, quality: 72) {\n              originalName\n              ...GatsbyImageSharpFluid\n              src\n            }\n          }\n        }\n      }\n    }\n    image_data: allAstroJson {\n      nodes {\n        astro_image_details {\n          description\n          equipment\n          image\n          link\n          title\n          id\n        }\n      }\n    }\n    astroImage: file(relativePath: { eq: \"milkywaypanorama.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 2000) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n  `);\n  let imageDetails = data.image_data.nodes[0].astro_image_details;\n  // sort based on priority id in image details\n  imageDetails.sort((a,b) => {return b.id - a.id;})\n\n  const [urlImage, setUrlImage] = useQueryParam(\"image\", StringParam);\n\n  return (\n    <AstroLayout section=\"images\">\n        <PhotoGrid thumbnails={data.thumbnails.edges} images={data.images.edges} imageDetails={imageDetails} urlImage={urlImage}></PhotoGrid> \n    </AstroLayout>\n  );\n}\n\nexport default SecondPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"childrenContainer\":\"astro-module--childrenContainer--2DUYo\",\"astroNav\":\"astro-module--astroNav--3ip7-\",\"astroNavButton\":\"astro-module--astroNavButton--12m3j\",\"selected\":\"astro-module--selected--21cou\",\"astroDescription\":\"astro-module--astroDescription--J4dDn\"};"],"sourceRoot":""}